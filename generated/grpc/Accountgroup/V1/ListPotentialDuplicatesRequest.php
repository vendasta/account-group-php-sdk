<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: account_group/v1/api.proto

namespace Accountgroup\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * ListPotentialDuplicatesRequest allows listing potential duplicates scoped to a partner by an existing account group,
 * or by location data. For more info, see the ListPotentialDuplicates RPC comment.
 * </pre>
 *
 * Protobuf type <code>accountgroup.v1.ListPotentialDuplicatesRequest</code>
 */
class ListPotentialDuplicatesRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>string partner_id = 1;</code>
     */
    private $partner_id = '';
    /**
     * <code>string cursor = 4;</code>
     */
    private $cursor = '';
    /**
     * <code>int64 page_size = 5;</code>
     */
    private $page_size = 0;
    /**
     * <code>string market_id = 6;</code>
     */
    private $market_id = '';
    protected $by;

    public function __construct() {
        \GPBMetadata\AccountGroup\V1\Api::initOnce();
        parent::__construct();
    }

    /**
     * <code>string partner_id = 1;</code>
     */
    public function getPartnerId()
    {
        return $this->partner_id;
    }

    /**
     * <code>string partner_id = 1;</code>
     */
    public function setPartnerId($var)
    {
        GPBUtil::checkString($var, True);
        $this->partner_id = $var;
    }

    /**
     * <code>string account_group_id = 2;</code>
     */
    public function getAccountGroupId()
    {
        return $this->readOneof(2);
    }

    /**
     * <code>string account_group_id = 2;</code>
     */
    public function setAccountGroupId($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);
    }

    /**
     * <code>.accountgroup.v1.AccountGroupLocation location = 3;</code>
     */
    public function getLocation()
    {
        return $this->readOneof(3);
    }

    /**
     * <code>.accountgroup.v1.AccountGroupLocation location = 3;</code>
     */
    public function setLocation(&$var)
    {
        GPBUtil::checkMessage($var, \Accountgroup\V1\AccountGroupLocation::class);
        $this->writeOneof(3, $var);
    }

    /**
     * <code>string cursor = 4;</code>
     */
    public function getCursor()
    {
        return $this->cursor;
    }

    /**
     * <code>string cursor = 4;</code>
     */
    public function setCursor($var)
    {
        GPBUtil::checkString($var, True);
        $this->cursor = $var;
    }

    /**
     * <code>int64 page_size = 5;</code>
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * <code>int64 page_size = 5;</code>
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt64($var);
        $this->page_size = $var;
    }

    /**
     * <code>string market_id = 6;</code>
     */
    public function getMarketId()
    {
        return $this->market_id;
    }

    /**
     * <code>string market_id = 6;</code>
     */
    public function setMarketId($var)
    {
        GPBUtil::checkString($var, True);
        $this->market_id = $var;
    }

    public function getBy()
    {
        return $this->whichOneof("by");
    }

}

